alias ls='ls --color=auto'
alias lla='ls -alF --group-directories-first'
alias ll='ls -lF --group-directories-first'
alias la='ls -A'
alias l='ls -CF'

alias dir='dir --color=auto'
alias vdir='vdir --color=auto'

alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias rgrep='grep -RHInC3'

alias aptdate="sudo $SHELL -c -- \"apt-get update && apt-get dist-upgrade -y && apt-get autoclean -y && apt-get autoremove -y\""


alias clake="cmake -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++"
alias clakerel="clake -DCMAKE_BUILD_TYPE=RelWithDebInfo"
alias clakedeb="clake -DCMAKE_BUILD_TYPE=Debug"
alias gnucake="cmake -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++"
alias gnucakerel="gnucake -DCMAKE_BUILD_TYPE=RelWithDebInfo"
alias gnucakedeb="gnucake -DCMAKE_BUILD_TYPE=Debug"

# Work

function run_pipeline_parallel(){
	number_of_parallel_instances=12
	output_filenames=()
	for i in {0..${number_of_parallel_instances}}
	do
		output_filename=$(tempfile -s -run-pipeline-output)
		output_filenames+=${output_filename}
		../bin/run-pipeline -R /home/sjors/mammo-ci/testcases/breastrunmc/resultsets /home/sjors/mammo-ci/testcases/breastrunmc/input/ > ${output_filename} 2>&1 &
	done
	echo "Done starting ${number_of_parallel_instances}. Writing output to ${output_filenames}"
}

[ -e "$HOME/.aliases.local" ] && source "$HOME/.aliases.local"

# vi: ft=sh
