alias ls='ls --color=auto -X'
alias lla='ls -alF --group-directories-first'
alias ll='ls -lF --group-directories-first'
alias la='ls -A'
alias l='ls -CF'

alias dir='dir --color=auto'
alias vdir='vdir --color=auto'

alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias rgrep='grep -RHInC3'

alias aptdate="sudo $SHELL -c -- \"apt-get update && apt-get dist-upgrade -y && apt-get autoclean -y && apt-get autoremove -y\""
alias cmake="cmake -Wdev -GNinja"
alias cmakedeb="cmake -DCMAKE_BUILD_TYPE=Debug"
alias cmakerel="cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo"

previous_cc=$CC
previous_cxx=$CXX

CC=clang
CXX=clang++
alias clake="CC=$CC CXX=$CXX cmake"
alias clakedeb="CC=$CC CXX=$CXX cmakedeb"
alias clakerel="CC=$CC CXX=$CXX cmakerel"
alias distclake="CC='distcc $CC' CXX='distcc $CXX' cmake"
alias distclakedeb="CC='distcc $CC' CXX='distcc $CXX' cmakedeb"
alias distclakerel="CC='distcc $CC' CXX='distcc $CXX' cmakerel"

CC=gcc
CXX=g++
alias gnake="CC=$CC CXX=$CXX cmake"
alias gnakedeb="CC=$CC CXX=$CXX cmakedeb"
alias gnakerel="CC=$CC CXX=$CXX cmakerel"
alias distgnake="CC='distcc $CC' CXX='distcc $CXX' cmake"
alias distgnakedeb="CC='distcc $CC' CXX='distcc $CXX' cmakedeb"
alias distgnakerel="CC='distcc $CC' CXX='distcc $CXX' cmakerel"

CC=$previous_cc
CXX=$previous_cxx

alias mxeke="cmake -DCMAKE_TOOLCHAIN_FILE=\"$MXE_ROOT/usr/x86_64-w64-mingw32.shared/share/cmake/mxe-conf.cmake\""
alias mxekedeb="cmakedeb -DCMAKE_TOOLCHAIN_FILE=\"$MXE_ROOT/usr/x86_64-w64-mingw32.shared/share/cmake/mxe-conf.cmake\""
alias mxekerel="cmakerel -DCMAKE_TOOLCHAIN_FILE=\"$MXE_ROOT/usr/x86_64-w64-mingw32.shared/share/cmake/mxe-conf.cmake\""

alias gtac=tac

# It's a su that checks the user's authorized_keys, quite useful.
alias ssu='ssh localhost -l'


# Work

function run_pipeline_parallel(){
	number_of_parallel_instances=12
	output_filenames=()
	for i in {0..${number_of_parallel_instances}}
	do
		output_filename=$(tempfile -s -run-pipeline-output)
		output_filenames+=${output_filename}
		../bin/run-pipeline -R /home/sjors/mammo-ci/testcases/breastrunmc/resultsets /home/sjors/mammo-ci/testcases/breastrunmc/input/ > ${output_filename} 2>&1 &
	done
	echo "Done starting ${number_of_parallel_instances}. Writing output to ${output_filenames}"
}

[ -e "$HOME/.aliases.local" ] && source "$HOME/.aliases.local"

# vi: ft=sh
