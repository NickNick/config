if test_command gls; then
	alias ls='gls --color=auto'
else
	alias ls='ls --color=auto'
fi

alias lla='ls -alF --group-directories-first'
alias ll='ls -lF --group-directories-first'
alias la='ls -A'
alias l='ls -CF'

alias clip='xclip -i -selection clipboard'

alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias rgrep='grep -RHInC3'

alias aptdate="sudo $SHELL -c -- \"apt-get update && apt-get dist-upgrade -y && apt-get autoclean -y && apt-get autoremove -y\""
alias cmake="cmake -Wdev -GNinja -DCMAKE_INSTALL_PREFIX=${HOME}/.local/ -DCMAKE_PREFIX_PATH=${HOME}/.local"

function cmakedeb(){
	cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS_DEBUG="-O0 -g" $@
}

function cmakerel(){
	cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_CXX_FLAGS_RELWITHDEBINFO="-O3 -g -fno-omit-frame-pointer" $@
}

function cmakerela(){
	cmake -DCMAKE_BUILD_TYPE=RelWithAsserts -DCMAKE_CXX_FLAGS_RELWITHDEBINFO="-O3 -g -fno-omit-frame-pointer" $@
}

function cminstal(){
	mkdir -p build-installed &&
	cd build-installed &&
	cmakerel .. $@ &&
	ninja install
}

previous_cc=$CC
previous_cxx=$CXX

CC=clang
CXX=clang++
CFLAGS='-fno-omit-frame-pointer -fcolor-diagnostics -fno-limit-debug-info -march=native'
CXXFLAGS='-fno-omit-frame-pointer -fcolor-diagnostics -ftemplate-backtrace-limit=0 -fno-limit-debug-info -march=native'
LDFLAGS='-fuse-ld=lld'
alias     clake="CC='$CC' CXX='$CXX' CFLAGS='$CFLAGS' CXXFLAGS='$CXXFLAGS' LDFLAGS='$LDFLAGS' cmake"
alias  clakedeb="CC='$CC' CXX='$CXX' CFLAGS='$CFLAGS' CXXFLAGS='$CXXFLAGS' LDFLAGS='$LDFLAGS' cmakedeb"
alias  clakerel="CC='$CC' CXX='$CXX' CFLAGS='$CFLAGS' CXXFLAGS='$CXXFLAGS' LDFLAGS='$LDFLAGS' cmakerel"
alias clakerela="CC='$CC' CXX='$CXX' CFLAGS='$CFLAGS' CXXFLAGS='$CXXFLAGS' LDFLAGS='$LDFLAGS' cmakerela"
function makeclakedeb(){
	mkd build-clang-Debug &&
	clakedeb .. &&
	cd ..
}
function makeclakerel(){
	mkd build-clang-Release &&
	clakerel .. &&
	cd ..
}

CC=gcc
CXX=g++
CFLAGS='-fno-omit-frame-pointer -march=native'
CXXFLAGS='-fno-omit-frame-pointer -march=native'
LDFLAGS=''
alias     gnake="CC='$CC' CXX='$CXX' CFLAGS='$CFLAGS' CXXFLAGS='$CXXFLAGS' LDFLAGS='$LDFLAGS' cmake"
alias  gnakedeb="CC='$CC' CXX='$CXX' CFLAGS='$CFLAGS' CXXFLAGS='$CXXFLAGS' LDFLAGS='$LDFLAGS' cmakedeb"
alias  gnakerel="CC='$CC' CXX='$CXX' CFLAGS='$CFLAGS' CXXFLAGS='$CXXFLAGS' LDFLAGS='$LDFLAGS' cmakerel"
alias gnakerela="CC='$CC' CXX='$CXX' CFLAGS='$CFLAGS' CXXFLAGS='$CXXFLAGS' LDFLAGS='$LDFLAGS' cmakerela"
function makegnakedeb(){
	mkd build-gcc-Debug &&
	gnakedeb .. &&
	cd ..
}
function makegnakerel(){
	mkd build-gcc-Release &&
	gnakerel .. &&
	cd ..
}

CC=$previous_cc
CXX=$previous_cxx

alias mxeke="cmake -DCMAKE_TOOLCHAIN_FILE=\"$MXE_ROOT/usr/x86_64-w64-mingw32.shared/share/cmake/mxe-conf.cmake\""
alias mxekedeb="cmakedeb -DCMAKE_TOOLCHAIN_FILE=\"$MXE_ROOT/usr/x86_64-w64-mingw32.shared/share/cmake/mxe-conf.cmake\""
alias mxekerel="cmakerel -DCMAKE_TOOLCHAIN_FILE=\"$MXE_ROOT/usr/x86_64-w64-mingw32.shared/share/cmake/mxe-conf.cmake\""
alias mxekerela="cmakerela -DCMAKE_TOOLCHAIN_FILE=\"$MXE_ROOT/usr/x86_64-w64-mingw32.shared/share/cmake/mxe-conf.cmake\""

emscripten_toolchain='/usr/local/Cellar/emscripten/1.32.0/libexec/cmake/Modules/Platform/Emscripten.cmake'
alias emcmakedeb="cmakedeb -DCMAKE_TOOLCHAIN_FILE=${emscripten_toolchain}"
alias emcmakerel="cmakerel -DCMAKE_TOOLCHAIN_FILE=${emscripten_toolchain}"

alias gtac=tac

# It's a su that checks the user's authorized_keys, quite useful.
alias ssu='ssh localhost -l'

alias distccclearstate='rm -r ~/.distcc/{lock,state}'

alias perfgraphcaller="perf report -g 'graph,0.5,caller'"
alias perfgraphcallee="perf report -g 'graph,0.5,callee'"
alias perfrec="perf record -g"

function cmake_install() {
	mkd build-installed &&
	clakerel .. &&
	ninja install
}

alias ..='cd ..'

alias commit='git commit'
alias preb='git preb'
alias c='git commit'
alias s='git status'
alias pr='git preb'
alias pu='git push'
alias a='git add -p'
alias d='git diff'
alias w='git wiff'

[ -e "$HOME/.aliases.local" ] && source "$HOME/.aliases.local"

# vi: ft=sh
